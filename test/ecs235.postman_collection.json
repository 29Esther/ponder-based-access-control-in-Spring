{
	"info": {
		"_postman_id": "072bf345-2aa7-45e5-8d65-83ed6720c72d",
		"name": "ecs235",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "1. admin verification",
			"item": [
				{
					"name": "1. get token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"admin_jwt\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"password": "{{client_secret}}",
								"username": "{{client_id}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "admin1",
									"type": "text"
								},
								{
									"key": "password",
									"value": "admin1",
									"type": "text"
								}
							]
						},
						"url": "http://localhost:8083/auth/realms/ecs235/protocol/openid-connect/token"
					},
					"response": []
				},
				{
					"name": "2.1. create a student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var a = jsonData._links.self.href.split(\"/\");",
									"pm.globals.set(\"student_id\", a[a.length - 1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"student300\",\n  \"firstName\": \"Student\",\n  \"lastName\": \"Three hundrd\",\n  \"age\": 18,\n  \"email\": \"s300@ecs235.edu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/users"
					},
					"response": []
				},
				{
					"name": "2.2. update a student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"student300\",\n  \"firstName\": \"Student\",\n  \"lastName\": \"Three hundrd\",\n  \"age\": 28,\n  \"email\": \"s300@ecs235.edu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/users/{{student_id}}"
					},
					"response": []
				},
				{
					"name": "2.3. delete a student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"student300\",\n  \"firstName\": \"Student\",\n  \"lastName\": \"Three hundrd\",\n  \"age\": 28,\n  \"email\": \"s300@ecs235.edu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/users/{{student_id}}"
					},
					"response": []
				},
				{
					"name": "2.4. create a student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var a = jsonData._links.self.href.split(\"/\");",
									"pm.globals.set(\"student_id\", a[a.length - 1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"student300\",\n  \"firstName\": \"Student\",\n  \"lastName\": \"Three hundrd\",\n  \"age\": 18,\n  \"email\": \"s300@ecs235.edu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/users"
					},
					"response": []
				},
				{
					"name": "2.5. create another student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var a = jsonData._links.self.href.split(\"/\");",
									"pm.globals.set(\"student_id_2\", a[a.length - 1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"student301\",\n  \"firstName\": \"Student\",\n  \"lastName\": \"Three hundrd and one\",\n  \"age\": 38,\n  \"email\": \"s301@ecs235.edu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/users"
					},
					"response": []
				},
				{
					"name": "3.1. create a lecturer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var a = jsonData._links.self.href.split(\"/\");",
									"pm.globals.set(\"lecturer_id\", a[a.length - 1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"lecturer100\",\n  \"firstName\": \"Lecturer\",\n  \"lastName\": \"One hundrd\",\n  \"age\": 68,\n  \"email\": \"l100@ecs235.edu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/users"
					},
					"response": []
				},
				{
					"name": "3.2. update a lecturer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"lecturer100\",\n  \"firstName\": \"Lecturer\",\n  \"lastName\": \"One hundrd\",\n  \"age\": 68,\n  \"email\": \"l100@ecs235.edu.lec\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/users/{{lecturer_id}}"
					},
					"response": []
				},
				{
					"name": "3.3. delete a lecturer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"lecturer100\",\n  \"firstName\": \"Lecturer\",\n  \"lastName\": \"One hundrd\",\n  \"age\": 68,\n  \"email\": \"l100@ecs235.edu.lec\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/users/{{lecturer_id}}"
					},
					"response": []
				},
				{
					"name": "3.4. create a lecturer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var a = jsonData._links.self.href.split(\"/\");",
									"pm.globals.set(\"lecturer_id\", a[a.length - 1]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"lecturer100\",\n  \"firstName\": \"Lecturer\",\n  \"lastName\": \"One hundrd\",\n  \"age\": 68,\n  \"email\": \"l100@ecs235.edu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/users"
					},
					"response": []
				},
				{
					"name": "4.1. create a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"course_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"ecs235\",\n  \"level\": 2,\n  \"lecturerId\":{{lecturer_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/api/v1/courses"
					},
					"response": []
				},
				{
					"name": "4.2. update a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"ecs235\",\n  \"level\": 2,\n  \"lecturerId\":{{lecturer_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/api/v1/courses/{{course_id}}"
					},
					"response": []
				},
				{
					"name": "4.3. delete a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"ecs235\",\n  \"level\": 2,\n  \"lecturerId\":{{lecturer_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/api/v1/courses/{{course_id}}"
					},
					"response": []
				},
				{
					"name": "4.4. create a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"course_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"ecs235\",\n  \"level\": 2,\n  \"lecturerId\":{{lecturer_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/api/v1/courses"
					},
					"response": []
				},
				{
					"name": "5.1. register a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"studentId\": {{student_id}},\n  \"courseId\": {{course_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/api/v1/courseRegistrations"
					},
					"response": []
				}
			]
		},
		{
			"name": "2. student verification",
			"item": [
				{
					"name": "1. get token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"student_jwt\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"password": "{{client_secret}}",
								"username": "{{client_id}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "user1",
									"type": "text"
								},
								{
									"key": "password",
									"value": "user1",
									"type": "text"
								}
							]
						},
						"url": "http://localhost:8083/auth/realms/ecs235/protocol/openid-connect/token"
					},
					"response": []
				},
				{
					"name": "2. register a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"course_registration_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{student_jwt}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"studentId\": {{student_id}},\n  \"courseId\": {{course_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/api/v1/courseRegistrations"
					},
					"response": []
				},
				{
					"name": "3. unregister a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{student_jwt}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "http://localhost:8081/app/api/v1/courseRegistrations/{{course_registration_id}}"
					},
					"response": []
				},
				{
					"name": "4. register a course again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"course_registration_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{student_jwt}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"studentId\": {{student_id}},\n  \"courseId\": {{course_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/api/v1/courseRegistrations"
					},
					"response": []
				},
				{
					"name": "5. update a course grade",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{student_jwt}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"grade\":\"100\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/app/api/v1/courseRegistrations?studentId={{student_id}}&courseId={{course_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"app",
								"api",
								"v1",
								"courseRegistrations"
							],
							"query": [
								{
									"key": "studentId",
									"value": "{{student_id}}"
								},
								{
									"key": "courseId",
									"value": "{{course_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "6. delete a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{student_jwt}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"student300\",\n  \"firstName\": \"Student\",\n  \"lastName\": \"Three hundrd\",\n  \"age\": 18,\n  \"email\": \"s300@ecs235.edu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/api/v1/courses/{{course_id}}"
					},
					"response": []
				}
			]
		},
		{
			"name": "3. lecturer verification",
			"item": [
				{
					"name": "1. get token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"lec_jwt\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"password": "{{client_secret}}",
								"username": "{{client_id}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "lec1",
									"type": "text"
								},
								{
									"key": "password",
									"value": "lec1",
									"type": "text"
								}
							]
						},
						"url": "http://localhost:8083/auth/realms/ecs235/protocol/openid-connect/token"
					},
					"response": []
				},
				{
					"name": "2. update a course grade",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{lec_jwt}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"grade\":\"60\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/app/api/v1/courseRegistrations?studentId={{student_id}}&courseId={{course_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"app",
								"api",
								"v1",
								"courseRegistrations"
							],
							"query": [
								{
									"key": "studentId",
									"value": "{{student_id}}"
								},
								{
									"key": "courseId",
									"value": "{{course_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3. update a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{lec_jwt}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"ecs235\",\n  \"level\": 2,\n  \"lecturerId\":{{lecturer_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/api/v1/courses/{{course_id}}"
					},
					"response": []
				},
				{
					"name": "4. update a student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{lec_jwt}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"student300\",\n  \"firstName\": \"Student\",\n  \"lastName\": \"Three hundrd\",\n  \"age\": 28,\n  \"email\": \"s300@ecs235.edu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/users/{{student_id}}"
					},
					"response": []
				},
				{
					"name": "5. register a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{lec_jwt}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"studentId\": {{student_id}},\n  \"courseId\": {{course_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/api/v1/courseRegistrations"
					},
					"response": []
				}
			]
		},
		{
			"name": "4. ta verification",
			"item": [
				{
					"name": "1. get token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"ta_jwt\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"password": "{{client_secret}}",
								"username": "{{client_id}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "ta1",
									"type": "text"
								},
								{
									"key": "password",
									"value": "ta1",
									"type": "text"
								}
							]
						},
						"url": "http://localhost:8083/auth/realms/ecs235/protocol/openid-connect/token"
					},
					"response": []
				},
				{
					"name": "2. update a course grade",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{ta_jwt}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"grade\":\"80\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/app/api/v1/courseRegistrations?studentId={{student_id}}&courseId={{course_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"app",
								"api",
								"v1",
								"courseRegistrations"
							],
							"query": [
								{
									"key": "studentId",
									"value": "{{student_id}}"
								},
								{
									"key": "courseId",
									"value": "{{course_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3. register a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"course_registration_id_2\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{ta_jwt}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"studentId\": {{student_id_2}},\n  \"courseId\": {{course_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/api/v1/courseRegistrations"
					},
					"response": []
				},
				{
					"name": "4. unregister a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.globals.unset(\"course_registration_id_2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{ta_jwt}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "http://localhost:8081/app/api/v1/courseRegistrations/{{course_registration_id_2}}"
					},
					"response": []
				},
				{
					"name": "5. create a student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{ta_jwt}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userName\": \"student300\",\n  \"firstName\": \"Student\",\n  \"lastName\": \"Three hundrd\",\n  \"age\": 18,\n  \"email\": \"s300@ecs235.edu\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/users"
					},
					"response": []
				},
				{
					"name": "6. update a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{ta_jwt}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"ecs235\",\n  \"level\": 2,\n  \"lecturerId\":{{lecturer_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/api/v1/courses/{{course_id}}"
					},
					"response": []
				}
			]
		},
		{
			"name": "5. guest verification",
			"item": [
				{
					"name": "1. get token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"guest_jwt\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"password": "{{client_secret}}",
								"username": "{{client_id}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "guest1",
									"type": "text"
								},
								{
									"key": "password",
									"value": "guest1",
									"type": "text"
								}
							]
						},
						"url": "http://localhost:8083/auth/realms/ecs235/protocol/openid-connect/token"
					},
					"response": []
				},
				{
					"name": "2.1.  register a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{guest_jwt}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"studentId\": {{student_id}},\n  \"courseId\": {{course_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/api/v1/courseRegistrations"
					},
					"response": []
				},
				{
					"name": "2.2. update a course grade",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{guest_jwt}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"grade\":\"80\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/app/api/v1/courseRegistrations?studentId={{student_id}}&courseId={{course_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"app",
								"api",
								"v1",
								"courseRegistrations"
							],
							"query": [
								{
									"key": "studentId",
									"value": "{{student_id}}"
								},
								{
									"key": "courseId",
									"value": "{{course_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2.3. update a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{guest_jwt}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"ecs235\",\n  \"level\": 2,\n  \"lecturerId\":{{lecturer_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/api/v1/courses/{{course_id}}"
					},
					"response": []
				},
				{
					"name": "3.1. register a course without token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"studentId\": {{student_id}},\n  \"courseId\": {{course_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/api/v1/courseRegistrations"
					},
					"response": []
				},
				{
					"name": "3.2. update a course grade without token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"grade\":\"80\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/app/api/v1/courseRegistrations?studentId={{student_id}}&courseId={{course_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"app",
								"api",
								"v1",
								"courseRegistrations"
							],
							"query": [
								{
									"key": "studentId",
									"value": "{{student_id}}"
								},
								{
									"key": "courseId",
									"value": "{{course_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3.3. update a course without token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"ecs235\",\n  \"level\": 2,\n  \"lecturerId\":{{lecturer_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8081/app/api/v1/courses/{{course_id}}"
					},
					"response": []
				}
			]
		},
		{
			"name": "6. clean house",
			"item": [
				{
					"name": "1. unregister a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.globals.unset(\"course_registration_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{student_jwt}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "http://localhost:8081/app/api/v1/courseRegistrations/{{course_registration_id}}"
					},
					"response": []
				},
				{
					"name": "2. delete a student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.globals.unset(\"student_id\");",
									"pm.globals.unset(\"student_jwt\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "http://localhost:8081/app/users/{{student_id}}"
					},
					"response": []
				},
				{
					"name": "3. delete another student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.globals.unset(\"student_id_2\");",
									"pm.globals.unset(\"ta_jwt\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "http://localhost:8081/app/users/{{student_id_2}}"
					},
					"response": []
				},
				{
					"name": "4. delete a course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.globals.unset(\"course_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "http://localhost:8081/app/api/v1/courses/{{course_id}}"
					},
					"response": []
				},
				{
					"name": "5. delete a lecturer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.globals.unset(\"lecturer_id\");",
									"pm.globals.unset(\"lec_jwt\");",
									"",
									"pm.globals.unset(\"admin_jwt\");",
									"pm.globals.unset(\"guest_jwt\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_jwt}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "http://localhost:8081/app/users/{{lecturer_id}}"
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "jwt",
			"value": ""
		},
		{
			"key": "variable_key",
			"value": ""
		}
	]
}